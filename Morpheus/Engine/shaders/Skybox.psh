#include "Utils/BasicStructures.hlsl"
#include "Utils/ToneMapping.hlsl"
#include "Utils/Gamma.hlsl"

TextureCube  mTexture;
SamplerState mTexture_sampler; // By convention, texture samplers must use the '_sampler' suffix

cbuffer ViewData
{
   	ViewAttribs mViewData;
};

struct PSInput 
{ 
    float4 Position   	: SV_POSITION;
	float3 Direction 	: TEXCOORD;
};

struct PSOutput
{ 
    float4 Color : SV_TARGET; 
};

void main(in PSInput PSIn,
	out PSOutput PSOut) {

	float3 dir = PSIn.Direction;

	float3 color = mTexture.Sample(mTexture_sampler, dir).rgb;

	// Tone mapping
	float3 outputColor = ToneMap(color, mViewData.mPostProcessor.mToneMapping);
		
	// Gamma correction
	outputColor = LinearToSRGB(outputColor, mViewData.mPostProcessor.mGamma);

	PSOut.Color = float4(outputColor, 1.0);
}