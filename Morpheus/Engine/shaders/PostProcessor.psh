#include "FullscreenTriangle.hlsl"
#include "PostProcessorStructures.hlsl"
#include "ToneMapping.hlsl"
#include "Gamma.hlsl"

Texture2D    mInputFramebuffer;
SamplerState mInputFramebuffer_sampler; // By convention, texture samplers must use the '_sampler' suffix

cbuffer mAttribs {
	PostProcessorParams mParams;
};

void main(in FullScreenTriangleVSOutput VSOut,
	out float4 Color   : SV_Target) {
	
	// Get UV coordinates
	float2 uv = 0.5 * VSOut.f2NormalizedXY + float2(0.5, 0.5);
	uv = float2(1.0, 1.0) - uv;

	float3 inputColor = mInputFramebuffer.Sample(mInputFramebuffer_sampler, uv).rgb;

	// Tone mapping
	float3 outputColor = ToneMap(inputColor, mParams.mToneMapAttribs);
		
	// Gamma correction
	outputColor = LinearToSRGB(outputColor, mParams.mGamma);

	Color = float4(outputColor, 1.0);
}